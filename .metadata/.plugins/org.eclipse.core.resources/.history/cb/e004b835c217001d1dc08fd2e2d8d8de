package DatabaseLayer;

import Models.User;
import Helper.DataConnector;
import Helper.DatabaseConnector;
import java.sql.statement;
import java.sql.perparedstatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResulSet;
import java.sql.ResultSet;
import java.util.ArrayList;
public class DLUser {

	private User user;
	private DatabaseConnector db;
	private Connection connection;
	
	public DLUser() throws Exception{
		this.user.
	}

	public DLUser(User user) throws Exception{
		this.user = user;
		try {
			this.db = DatabaseConnector.getInstance();
			this.connection = this.db.getConnection();
		} catch (Exception ex) {
			throw ex;
		}
	}
 
	public User getUser() {
		return user;
	}
	
	public void setUser(User user) {
		this.user = user;
	}
	
	public User save() throws Exception{
		try {
			//prepare for the data to be returned in case of insert
			String generatedColumns[] = {"id"};
			//create statement
			String query = "INSERT INTO user(name, address) VALUES(?,?)";
			PreparedStatement statement = this.connection.preparedStatement(query, generatedColumns);
			statement.setString(1, this.user.getName());
			statement.setString(2, this.user.getAddress());
			//execute the query
			int noOfUpdate = statement.executeUpdate();
			if(noOfUpdate > 0) {
				ResultSet rs = statement.getGeneratedKeys();
				if(rs.next()) {
					int id = rs.getInt(1);
					this.user.setUserID(id);
				}
			}
		}
	}
}
