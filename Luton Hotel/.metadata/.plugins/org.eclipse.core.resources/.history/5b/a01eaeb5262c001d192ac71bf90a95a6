package BusinessLayer;

import DatabaseLayer.DLBooking;
import DatabaseLayer.DLLogin;
import Helper.InputException;
import Models.Booking;

public class BLBooking {

	//declaring variable
	private Booking book;

	public BLBooking() {
		this.book = new Booking();
	}

	public Booking getLog() {
		return book;
	}

	//setting data
	public void setBook(Booking book) throws Exception{
		try {
			if(this.ValidateBooking(book)) {
				this.book = book;
			}
		}catch (Exception ex) {
			throw ex;
		}	
	}
	
	/*
	 * provides true or false value
	 * validation during booking
	 * the arrival and departure date
	 */
	private boolean ValidateBooking(Booking book) throws InputException {
		if(book.getArrivalDate() == null || book.getArrivalDate().length()==0){
			throw new InputException("Arrival date cannot be empty.");
		}
		if(book.getDepartureDate() == null || book.getDepartureDate().length()==0){
			throw new InputException("Departure date cannot be empty.");
		}
		return true;
	}
	
	//connecting with database
	public Booking book() throws Exception{
		try {
			
			//creating new object and initializing it
			DLBooking dlBook = new DLBooking(this.book);
			return dlBook.login();
		}catch (Exception e) {
			throw e;
		}
	}
	
}